{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-bubble/chat-bubble.component.ts","webpack:///src/app/components/chat-bubble/chat-bubble.component.html","webpack:///src/app/components/chat-section/chat-section.component.ts","webpack:///src/app/components/chat-section/chat-section.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/user-card/user-card.component.ts","webpack:///src/app/components/user-card/user-card.component.html","webpack:///src/app/models/ChatMessage.ts","webpack:///src/app/models/ContactInbox.ts","webpack:///src/app/models/ContactInfo.ts","webpack:///src/app/pages/chat-app/chat-app.component.ts","webpack:///src/app/pages/chat-app/chat-app.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/contact-selected.service.ts","webpack:///src/app/services/conversations.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","redirectUnauthorizedToLogin","redirectLoggedInToChat","routes","path","component","canActivate","data","authGuardPipe","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","ChatBubbleComponent","ChatSectionComponent","_contactSelectedService","_conversationsService","_auth","toggled","messages","Array","messageToSend","inboxMessages","firebaseUser","getUser","userCard","displayName","email","photoURL","currentContact","subscribe","item","contact","currentMessages","msg","scrollToTheEnd","event","form","length","_id","push","Date","reset","messageSection","nativeElement","scrollTop","scrollHeight","handleSelection","handleSubmit","HeaderComponent","user","undefined","logout","SidebarComponent","contactSelected","contactsInfo","loadContacts","console","log","getContacts","emit","onSubmit","UserCardComponent","parsedTitle","parseStringByLength","title","parsedSubtitle","subtitle","stringToBeParsed","lengthOfParsedString","result","substr","concat","print","ChatMessage","content","date","type","ContactInbox","ContactInfo","status","avatar","ChatAppComponent","updateContactSelected","receiveContact","LoginComponent","_router","loginClicked","turnOnSpinner","loginWithGoogle","googleLogIn","AuthService","auth","_http","_userSource","asObservable","api","signInWithPopup","GoogleAuthProvider","res","_userCredentials","next","navigate","err","get","url","signOut","currentUser","providedIn","ContactSelectedService","contactSource","ConversationsService","messagesSource","inbox","updateConversation","found","find","element","contactInfo","pop","message","contactInfo1","contactInfo2","contactInfo3","contactInfo4","contactInfo5","contactInbox1","contactInbox2","contactInbox3","contactInbox4","contactInbox5","contacts","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {LoginComponent} from './pages/login/login.component'\r\nimport {ChatAppComponent} from './pages/chat-app/chat-app.component'\r\n\r\nimport { AngularFireAuthGuard, redirectUnauthorizedTo,redirectLoggedInTo} from '@angular/fire/auth-guard';\r\n\r\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['login']);\r\nconst redirectLoggedInToChat = () => redirectLoggedInTo(['chat']);\r\n\r\nconst routes: Routes = [\r\n  {path:\"\", component:LoginComponent, canActivate: [AngularFireAuthGuard], data: { authGuardPipe: redirectLoggedInToChat }},\r\n  {path:\"login\", redirectTo:'/LoginComponent', canActivate:[AngularFireAuthGuard], data:{authGuardPipe: redirectLoggedInToChat}},\r\n  {path:\"chat\", component:ChatAppComponent, canActivate: [AngularFireAuthGuard], data: { authGuardPipe: redirectUnauthorizedToLogin }},\r\n  {path:\"**\", component:LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component} from '@angular/core';\r\n// import { ChatSectionComponent } from './components/chat-section/chat-section.component';\r\n// import Contact from './models/ContactInbox';\r\n// import ContactInfo from './models/ContactInfo';\r\n// import { ContactSelectedService } from './services/contact-selected.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n  // public title = 'Sistema de mensajería';\r\n  // public contactSelected:ContactInfo;\r\n  // //@ViewChild('chatSection') chatSection:ChatSectionComponent;\r\n  // constructor(private _contactSelectedService: ContactSelectedService){\r\n  //   this.contactSelected = new ContactInfo('','','','','assets/icons/default-avatar.svg');;\r\n  // }\r\n  // ngOnInit(){\r\n  // }\r\n  // receiveContact(contact:ContactInfo){\r\n  //   //this.chatSection.contact = contact;\r\n  //   //console.log(contact);\r\n  //   this._contactSelectedService.updateContactSelected(contact);\r\n  // }\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//material modules\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n//components\r\nimport { UserCardComponent } from './components/user-card/user-card.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { ChatSectionComponent } from './components/chat-section/chat-section.component';\r\nimport { ChatBubbleComponent } from './components/chat-bubble/chat-bubble.component';\r\n\r\n//downloaded\r\nimport  {  NgxEmojiPickerModule  }  from  'ngx-emoji-picker';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ChatAppComponent } from './pages/chat-app/chat-app.component';\r\n\r\n//firebase\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\r\n//import { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserCardComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n    ChatSectionComponent,\r\n    ChatBubbleComponent,\r\n    LoginComponent,\r\n    ChatAppComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatBadgeModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    NgxEmojiPickerModule.forRoot(),\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAnalyticsModule,\r\n    //AngularFirestoreModule\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'chat-bubble',\n  templateUrl: './chat-bubble.component.html',\n  styleUrls: ['./chat-bubble.component.css']\n})\nexport class ChatBubbleComponent implements OnInit {\n  @Input() public content:string;\n  @Input() public date:Date;\n  @Input() public type:number;\n  @Input() public avatar:string;\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"message-container\" [ngClass]=\"{'message-container-left': type===0, 'message-container-right': type===1}\">\n    <div *ngIf=\"type===0\">\n        <img mat-card-avatar src=\"{{avatar}}\" class=\"avatar\">\n    </div>\n    <div class=\"bubble\" [ngClass]=\"{'bubble-left': type===0, 'bubble-right': type===1}\">\n        <p class=\"content\">\n            {{content}}\n        </p>\n        <span class=\"date\">{{date | date:'shortTime'}}</span>\n    </div>\n    <div *ngIf=\"type===1\">\n        <img mat-card-avatar src=\"{{avatar}}\" class=\"avatar\">\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked, Input,OnChanges, DoCheck} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ChatMessage } from 'src/app/models/ChatMessage';\r\nimport ContactInbox from 'src/app/models/ContactInbox';\r\nimport ContactInfo from 'src/app/models/ContactInfo';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ConversationsService } from 'src/app/services/conversations.service';\r\nimport {ContactSelectedService} from '../../services/contact-selected.service'\r\n\r\nimport firebase from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'chat-section',\r\n  templateUrl: './chat-section.component.html',\r\n  styleUrls: ['./chat-section.component.css']\r\n})\r\nexport class ChatSectionComponent implements OnInit, AfterViewChecked, DoCheck  {\r\n  public contact: ContactInfo;\r\n  public messages: Array<ChatMessage>;\r\n  public dates:Array<Date>;\r\n\r\n  public toggled: boolean = false;\r\n  public messageToSend:string;\r\n\r\n  public firebaseUser:firebase.User;\r\n  public userCard:ContactInfo;\r\n\r\n  public inboxMessages:Array<ContactInbox>;\r\n  @ViewChild('messageSection') messageSection:ElementRef;\r\n\r\n  constructor(private _contactSelectedService:ContactSelectedService, \r\n            private _conversationsService:ConversationsService, \r\n            private _auth:AuthService) {\r\n    this.messages = new Array<ChatMessage>();\r\n\r\n    this.messageToSend = '';\r\n\r\n    this.inboxMessages = new Array<ContactInbox>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.firebaseUser = this._auth.getUser();\r\n    this.userCard = new ContactInfo('',this.firebaseUser.displayName, this.firebaseUser.email, '', this.firebaseUser.photoURL);\r\n    \r\n    this._contactSelectedService.currentContact.subscribe( item =>{\r\n      this.contact = item;\r\n    })\r\n    //update conversation\r\n    this._conversationsService.currentMessages.subscribe( msg=>{\r\n      //console.log(msg)\r\n      this.messages = msg;\r\n    })\r\n  }\r\n  ngDoCheck(){\r\n  }\r\n  ngAfterViewChecked() {\r\n    this.scrollToTheEnd();\r\n    \r\n  }\r\n\r\n  handleSelection(event:any) {\r\n    //console.log(event.char);\r\n    this.messageToSend += event.char;\r\n    //console.log(this.messageToSend);\r\n  }\r\n  handleSubmit(form:NgForm){\r\n    if(this.messageToSend.length && this.contact._id){\r\n      //console.log('submit');\r\n      this.messages.push(new ChatMessage(this.messageToSend,new Date(), 0));\r\n      //console.log('messageSection:',this.messageSection.nativeElement);\r\n      this.scrollToTheEnd();\r\n      \r\n      form.reset();\r\n      this.messageToSend = '';\r\n    }\r\n    \r\n  }\r\n  scrollToTheEnd(){\r\n    this.messageSection.nativeElement.scrollTop = this.messageSection.nativeElement.scrollHeight;\r\n  }\r\n  loadMessages(){\r\n    // this.messages = new Array<ChatMessage>();\r\n    // this.messages.push(new ChatMessage(\"This one adds a right triangle on the left, flush at the top by using .tri-right and .left-top to specify the location.\", new Date(), 0));\r\n    // this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"bye 😎😎\", new Date(),0));\r\n    // this.messages.push(new ChatMessage(\"Veniam nisi quis duis magna exercitation excepteur amet excepteur occaecat. 🍕🍕🚓🚗🏳‍🌈\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"Commodo culpa fugiat exercitation non amet minim id quis est incididunt aliquip fugiat dolore. Adipisicing laborum occaecat elit duis consequat. Dolore nisi aliqua ea ea minim et. Magna eiusmod deserunt sunt in duis reprehenderit voluptate velit minim pariatur aute. Mollit dolor 💛💚💖\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"This one adds a right triangle on the left, flush at the top by using .tri-right and .left-top to specify the location.\", new Date(), 0));\r\n    // this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"bye 😎😎\", new Date(),0));\r\n    // this.messages.push(new ChatMessage(\"Veniam nisi quis duis magna exercitation excepteur amet excepteur occaecat. 🍕🍕🚓🚗🏳‍🌈\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"Commodo culpa fugiat exercitation non amet minim id quis est incididunt aliquip fugiat dolore. Adipisicing laborum occaecat elit duis consequat. Dolore nisi aliqua ea ea minim et. Magna eiusmod deserunt sunt in duis reprehenderit voluptate velit minim pariatur aute. Mollit dolor 💛💚💖\", new Date(),1));\r\n    // this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(),1));\r\n\r\n  }\r\n}\r\n","<section class=\"chat-section-contaner\">\r\n    <!--contact info-->\r\n    <div class=\"contact-info\">\r\n        <!-- <div> -->\r\n            <!-- <user-card [contact]=\"contact\"></user-card> -->\r\n            <!-- <img mat-card-avatar src=\"{{contact.avatar}}\"> -->\r\n            <user-card [title]=\"contact.title\" [subtitle]=\"contact.subtitle\" [status]=\"contact.status\"\r\n                [avatar]=\"contact.avatar\"></user-card>\r\n        <!-- </div> -->\r\n        <div class=\"icon-container\">\r\n            <button mat-icon-button class=\"icon\">\r\n                <mat-icon>videocam</mat-icon>\r\n            </button>\r\n            <button mat-icon-button class=\"icon\">\r\n                <mat-icon>call</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!--messages-section-->\r\n    <div class=\"messages-section scroll\" #messageSection>\r\n        <div *ngFor=\"let message of messages\">\r\n            <chat-bubble *ngIf=\"message.type===0\" [content]=\"message.content\" [date]=\"message.date\" [type]=\"message.type\"\r\n                [avatar]=\"userCard.avatar\"></chat-bubble>\r\n            <chat-bubble *ngIf=\"message.type===1\" [content]=\"message.content\" [date]=\"message.date\" [type]=\"message.type\"\r\n                [avatar]=\"contact.avatar\"></chat-bubble>\r\n        </div>\r\n    </div>\r\n    <!--new message section-->\r\n    <div class=\"new-message-section\">\r\n        <form action=\"\" class=\"new-message-form\" #sendMessageForm=\"ngForm\">\r\n            <button class=\"emoji-picker item1\" mat-icon-button (click)=\"toggled = !toggled\" [(emojiPickerIf)]=\"toggled\"\r\n                [emojiPickerDirection]=\"'bottom' || 'top' || 'left' || 'right'\"\r\n                (emojiPickerSelect)=\"handleSelection($event)\">\r\n                <mat-icon>sentiment_satisfied_alt</mat-icon>\r\n            </button>\r\n            <div class=\"item2\">\r\n                <textarea name=\"message\" type=\"text\" placeholder=\"Escribe un mensaje\" required class=\"new-message-textarea\" \r\n                [(ngModel)]=\"messageToSend\" (keyup.enter)=\"handleSubmit(sendMessageForm)\"></textarea>\r\n            </div>\r\n            <div class=\"item3\">\r\n                <button mat-icon-button class=\"send-button\" (click)=\"handleSubmit(sendMessageForm)\">\r\n                    <mat-icon>send</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport ContactInfo from 'src/app/models/ContactInfo';\r\n\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport firebase from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public userCard:ContactInfo;\r\n  public user:firebase.User;\r\n  constructor(private _auth:AuthService) {\r\n    this.userCard = new ContactInfo('','','','','');\r\n    this.user = undefined;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this._auth.getUserObservable().subscribe(\r\n    //   res=>{\r\n    //     this.user = res;\r\n    //     console.log('user from header: ',this.user);\r\n    //   },err=>{\r\n    //     console.log(err);\r\n    //   })\r\n    this.user = this._auth.getUser();\r\n    this.userCard = new ContactInfo('',this.user.displayName, this.user.email, '', this.user.photoURL);\r\n    //console.log('user from header!!! ',this.user);\r\n    //this.loadUserInfo();\r\n  }\r\n  loadUserInfo(){\r\n    \r\n    this.userCard = new ContactInfo('12134','Shiba Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba1.jpg\");\r\n  \r\n    \r\n  }\r\n\r\n  logout(){\r\n    this._auth.logout();\r\n  }\r\n}\r\n","<mat-toolbar class=\"toolbar\">\r\n    <img src=\"assets/icons/speech-bubble.svg\" width=\"24px\" height=\"24px\">\r\n    <span>Sistema de mensajería</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button matTooltip=\"{{userCard.title}}\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n        <img mat-card-avatar src=\"{{userCard.avatar}}\" class=\"avatar\">\r\n    </button>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\"\r\n    [matMenuTriggerFor]=\"menu\" aria-label=\"options\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n\r\n    <!--menu-->\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item>\r\n        <mat-icon>settings</mat-icon>\r\n        <span>Settings</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>Logout</span>\r\n      </button>\r\n    </mat-menu>\r\n  </mat-toolbar>","import { Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport ContactInfo from 'src/app/models/ContactInfo';\r\nimport { ConversationsService } from 'src/app/services/conversations.service';\r\n\r\n@Component({\r\n  selector: 'sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  @Input() public contactsInfo:Array<ContactInfo>;\r\n  @Output() public contactSelected = new EventEmitter<ContactInfo>();\r\n  constructor(private _conversationsService:ConversationsService) {\r\n    this.contactsInfo = new Array<ContactInfo>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadContacts();\r\n    console.log('contacts from sidebar: ',this.contactsInfo);\r\n  }\r\n\r\n  onSubmit(form:NgForm): void{\r\n    console.log('search form send');\r\n  }\r\n  loadContacts(){\r\n    this._conversationsService.loadContacts();\r\n    this.contactsInfo = this._conversationsService.getContacts();\r\n    console.log('contacts from server: ',this.contactsInfo);\r\n  }\r\n  notify(contact:ContactInfo){\r\n    this.contactSelected.emit(contact);\r\n  }\r\n\r\n}\r\n","<section class=\"sidebar-container\">\r\n    <div class=\"search-container\">\r\n        <form class=\"search-form\" #searchForm=\"ngForm\" (ngSubmit)=\"onSubmit(searchForm)\">\r\n            <input type=\"text\" placeholder=\"Buscar usuario\" class=\"search-input\">\r\n            <mat-icon class=\"search-button\">search</mat-icon>\r\n        </form>\r\n    </div>\r\n    <div class=\"inbox-container\" *ngIf=\"contactsInfo\">\r\n        <span class=\"inbox\" *ngFor=\"let contact of contactsInfo\">\r\n            <user-card [title]=\"contact.title\" [subtitle]=\"contact.subtitle\" [status]=\"contact.status\"\r\n                [avatar]=\"contact.avatar\" (click)=\"notify(contact)\"></user-card>\r\n                <!-- <user-card [contact]=\"contact\" (click)=\"notify(contact)\"></user-card> -->\r\n        </span>\r\n    </div>\r\n</section>","import { Component, OnInit, Input, Output, AfterViewChecked, DoCheck } from '@angular/core';\r\nimport ContactInfo from 'src/app/models/ContactInfo';\r\n\r\n@Component({\r\n  selector: 'user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.css']\r\n})\r\nexport class UserCardComponent implements OnInit, DoCheck {\r\n  @Input() public avatar: string;\r\n  @Input() public title: string;\r\n  @Input() public subtitle: string;\r\n  @Input() public status: string;\r\n  //@Input() public contact:ContactInfo;\r\n  // @Output() public clicked = new;\r\n  public parsedTitle: string;\r\n  public parsedSubtitle: string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //console.log('contact: ',this.contact);\r\n    this.parsedTitle = this.parseStringByLength(this.title, 20);\r\n    this.parsedSubtitle = this.parseStringByLength(this.subtitle, 23);\r\n  }\r\n  ngDoCheck() {\r\n    //console.log(this.contact)\r\n    // if(this.title){\r\n    this.parsedTitle = this.parseStringByLength(this.title, 20);\r\n    // }\r\n    // if(this.subtitle){\r\n      if(this.title){\r\n        this.parsedSubtitle = 'online'\r\n      }\r\n\r\n    \r\n  }\r\n  /**\r\n   * \r\n   * @param stringToBeParsed \r\n   * @param lengthOfParsedString \r\n   * @returns if string if less than 17 characters returns the same. If not returns substring+'...'\r\n   */\r\n  public parseStringByLength(stringToBeParsed: string, lengthOfParsedString: number): string {\r\n    let result = null;\r\n    if (stringToBeParsed) {\r\n      if (stringToBeParsed.length < 20) {\r\n        result = stringToBeParsed;\r\n      }\r\n      else {\r\n        result = stringToBeParsed.substr(0, lengthOfParsedString).concat('...');\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  print() {\r\n    //console.log(this.title, this.subtitle, this.status, this.avatar)\r\n  }\r\n}\r\n","<mat-card class=\"user-card\" (click)=\"print()\">\r\n    <mat-card-header>\r\n        <div mat-card-avatar *ngIf=\"avatar\">\r\n            <img mat-card-avatar src=\"{{avatar}}\"  >\r\n            <div *ngIf=\"status==='online' || status==='offline'\" class=\"badge\"  [ngClass]=\"{'online': status==='online', 'offline': status==='offline'}\"></div>\r\n        </div>\r\n        <div mat-card-avatar *ngIf=\"!avatar\">\r\n            <img mat-card-avatar src=\"assets/icons/default-avatar.svg\"  >\r\n            <div *ngIf=\"status==='online' || status==='offline'\" class=\"badge\"  [ngClass]=\"{'online': status==='online', 'offline': status==='offline'}\"></div>\r\n        </div>\r\n        <mat-card-title>{{parsedTitle}}</mat-card-title>\r\n        <mat-card-subtitle>{{parsedSubtitle}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n</mat-card>","export class ChatMessage{\r\n    constructor(public content:string, public date:Date, public type:number){}\r\n}","import {ChatMessage} from './ChatMessage'\r\nimport ContactInfo from './ContactInfo';\r\n\r\nexport default class ContactInbox{\r\n    public contactInfo:ContactInfo;\r\n    //public _id:string;\r\n    public messages:Array<ChatMessage>;\r\n}","export default class ContactInfo{\r\n    \r\n    constructor(public _id:string, public title:string, public subtitle:string, public status:string, public avatar:string){};\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport ContactInfo from 'src/app/models/ContactInfo';\r\n//import { AuthService } from 'src/app/services/auth.service';\r\nimport { ContactSelectedService } from 'src/app/services/contact-selected.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-app',\r\n  templateUrl: './chat-app.component.html',\r\n  styleUrls: ['./chat-app.component.css']\r\n})\r\nexport class ChatAppComponent implements OnInit {\r\n\r\n  public title = 'Sistema de mensajería';\r\n  public contactSelected:ContactInfo;\r\n  public user:any;\r\n  //@ViewChild('chatSection') chatSection:ChatSectionComponent;\r\n  constructor(private _contactSelectedService: ContactSelectedService){\r\n    this.contactSelected = new ContactInfo('','','','','assets/icons/default-avatar.svg');;\r\n  }\r\n  ngOnInit(){\r\n    // this._auth.getUser().subscribe(\r\n    //   res=>{\r\n    //     this.user = res;\r\n    //     console.log('user: ',this.user);\r\n    //   },err=>{\r\n    //     console.log(err);\r\n    //   })\r\n  }\r\n  receiveContact(contact:ContactInfo){\r\n    //this.chatSection.contact = contact;\r\n    //console.log(contact);\r\n    this._contactSelectedService.updateContactSelected(contact);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <app-header class=\"item1\"></app-header>\r\n    <sidebar class=\"item2\" (contactSelected)=\"receiveContact($event)\"></sidebar>\r\n    <chat-section class=\"item3\" #chatSection></chat-section>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport firebase from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [AuthService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginClicked:boolean;\r\n  constructor(private _router:Router, private _auth:AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginClicked = false;\r\n  }\r\n  turnOnSpinner(){\r\n    this.loginClicked = true;\r\n  }\r\n  googleLogIn(){\r\n    this.turnOnSpinner();\r\n    this._auth.loginWithGoogle();\r\n  }\r\n  logout(){\r\n   this._auth.logout();\r\n  }\r\n}\r\n","<div class=\"line\"></div>\r\n\r\n<div class=\"login-container\">\r\n    <div>\r\n        <img alt=\"logo\" class=\"logo\" src=\"assets/icons/people.svg\" width=\"80px\" height=\"80px\">\r\n    </div>\r\n    <!-- <div>\r\n        <h1>Sistema de mensajería</h1>\r\n    </div> -->\r\n    <h1><b>Sistema de mensajería</b></h1>\r\n    <div class=\"google\">\r\n        <button class=\"google-button\" mat-button (click)=\"googleLogIn()\">\r\n            <mat-icon><img alt=\"google-logo\" id=\"google-logo\" width=\"24px\" height=\"24px\"\r\n                    src=\"assets/icons/google-icon.svg\"></mat-icon>\r\n            <span id=\"google-title\">Continuar con Google</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<!-- \r\n<div #loader *ngIf=\"loginClicked\" ></div> -->\r\n<mat-spinner class=\"loader\" *ngIf=\"loginClicked\"></mat-spinner>\r\n<!-- <div *ngIf=\"user; else showLogin\">\r\n    <h1>Hello {{ user.displayName }}!</h1>\r\n    <button (click)=\"logout()\">Logout</button>\r\n</div>\r\n<ng-template #showLogin>\r\n    <p>Please login.</p>\r\n    <button (click)=\"login()\">Login with Google</button>\r\n</ng-template> -->","import { Injectable } from '@angular/core';\r\nimport { FirebaseApp } from '@angular/fire';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport firebase from 'firebase/app';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport {environment} from '../../environments/environment'\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private _userCredentials:firebase.auth.UserCredential;\r\n  private _userSource:BehaviorSubject<firebase.User>;\r\n  public readonly user:Observable<firebase.User>;\r\n  public api:{url:string};\r\n  constructor(public auth:AngularFireAuth, private _router:Router, private _http: HttpClient){\r\n    this._userSource = new BehaviorSubject<firebase.User>(undefined);\r\n    this.user = this._userSource.asObservable();\r\n    this.api = environment.api;\r\n  }\r\n  loginWithGoogle():void{\r\n    this.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider() )\r\n    .then( res => {\r\n      this._userCredentials = res;\r\n      this._userSource.next(res.user);\r\n      this._router.navigate([\"/chat\"]);\r\n    } )\r\n    .catch(err=>console.log(err));\r\n  }\r\n  connectToAPI(){\r\n    this._http.get(this.api.url).subscribe(\r\n            res=>{\r\n              \r\n            },\r\n            err=>{\r\n              console.log('error connecting to API: ',err);\r\n            })\r\n  }\r\n  logout(){\r\n    this.auth.signOut().then(res=>{\r\n      this._router.navigate([\"/\"]);\r\n    },err=>{\r\n      console.log(err);\r\n      this._router.navigate([\"/\"]);\r\n    })\r\n    return true;\r\n    //tal vez deberia modificar el userSource\r\n  }\r\n  getUserObservable():Observable<Object>{\r\n    return this.user;\r\n  }\r\n  getUser(){\r\n    return firebase.auth().currentUser;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport { ChatMessage } from '../models/ChatMessage';\r\nimport ContactInfo from '../models/ContactInfo';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactSelectedService {\r\n  private contactSource:BehaviorSubject<ContactInfo>;\r\n  public currentContact:Observable<ContactInfo>;\r\n  \r\n  // public inbox:Array<ContactInbox>;\r\n  constructor() {\r\n    this.contactSource = new BehaviorSubject<ContactInfo>(new ContactInfo('','','','','assets/icons/default-avatar.svg'));\r\n    this.currentContact = this.contactSource.asObservable(); \r\n  }\r\n  updateContactSelected(contact:ContactInfo){\r\n    this.contactSource.next(contact);\r\n  }\r\n\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ChatMessage } from '../models/ChatMessage';\r\nimport ContactInbox from '../models/ContactInbox';\r\nimport ContactInfo from '../models/ContactInfo';\r\nimport { ContactSelectedService } from './contact-selected.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversationsService {\r\n  public currentContact: ContactInfo;\r\n  public messages: Array<ChatMessage>;\r\n\r\n  private messagesSource: BehaviorSubject<Array<ChatMessage>>;\r\n  public currentMessages: Observable<Array<ChatMessage>>;\r\n\r\n  public inbox:Array<ContactInbox>;\r\n\r\n  constructor(private _contactSelectedService: ContactSelectedService) {\r\n    this.messagesSource = new BehaviorSubject<Array<ChatMessage>>(new Array<ChatMessage>());\r\n    this.currentMessages = this.messagesSource.asObservable();\r\n\r\n    this.inbox = new Array<ContactInbox>();\r\n    \r\n    this.messages = new Array<ChatMessage>();\r\n\r\n    this.messages.push(new ChatMessage(\"This one adds a right triangle on the left, flush at the top by using .tri-right and .left-top to specify the location.\", new Date(), 0));\r\n    this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"bye 😎😎\", new Date(), 0));\r\n    this.messages.push(new ChatMessage(\"Veniam nisi quis duis magna exercitation excepteur amet excepteur occaecat. 🍕🍕🚓🚗🏳‍🌈\", new Date(), 1));\r\n\r\n    this.messages.push(new ChatMessage(\"Commodo culpa fugiat exercitation non amet minim id quis est incididunt aliquip fugiat dolore. Adipisicing laborum occaecat elit duis consequat. Dolore nisi aliqua ea ea minim et. Magna eiusmod deserunt sunt in duis reprehenderit voluptate velit minim pariatur aute. Mollit dolor 💛💚💖\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"This one adds a right triangle on the left, flush at the top by using .tri-right and .left-top to specify the location.\", new Date(), 0));\r\n    this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"bye 😎😎\", new Date(), 0));\r\n    this.messages.push(new ChatMessage(\"Veniam nisi quis duis magna exercitation excepteur amet excepteur occaecat. 🍕🍕🚓🚗🏳‍🌈\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"Commodo culpa fugiat exercitation non amet minim id quis est incididunt aliquip fugiat dolore. Adipisicing laborum occaecat elit duis consequat. Dolore nisi aliqua ea ea minim et. Magna eiusmod deserunt sunt in duis reprehenderit voluptate velit minim pariatur aute. Mollit dolor 💛💚💖\", new Date(), 1));\r\n    this.messages.push(new ChatMessage(\"helo im ok 😍😍😍\", new Date(), 1));\r\n\r\n    this._contactSelectedService.currentContact.subscribe(item => {\r\n      this.currentContact = item;\r\n      this.updateConversation();\r\n    })\r\n  }\r\n\r\n  updateConversation() {\r\n    if (this.messages.length && this.currentContact._id) {\r\n      const found = this.inbox.find(element =>element.contactInfo._id === this.currentContact._id);\r\n      if(!found.messages){\r\n        found.messages = [this.messages.pop(), this.messages.pop()];\r\n      }\r\n      this.messagesSource.next(found.messages);\r\n    }\r\n    else {\r\n      this.messagesSource.next(new Array<ChatMessage>());\r\n    }\r\n\r\n  }\r\n  sendMessage(message:ChatMessage){\r\n    console.log('message send',message);\r\n  }\r\n  loadContacts(){\r\n    const contactInfo1:ContactInfo = new ContactInfo('1','Shiba Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba1.jpg\");\r\n    const contactInfo2:ContactInfo = new ContactInfo('2','Pancho Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba2.jpg\");\r\n    const contactInfo3:ContactInfo = new ContactInfo('3','David Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba1.jpg\");\r\n    const contactInfo4:ContactInfo = new ContactInfo('4','Carlitos Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba2.jpg\");\r\n    const contactInfo5:ContactInfo = new ContactInfo('5','Daniel Inu', 'Dog Breed', 'online', \"https://material.angular.io/assets/img/examples/shiba1.jpg\");\r\n    \r\n\r\n    const contactInbox1:ContactInbox = new ContactInbox();\r\n    contactInbox1.contactInfo = contactInfo1;\r\n\r\n    const contactInbox2:ContactInbox = new ContactInbox();\r\n    contactInbox2.contactInfo = contactInfo2;\r\n\r\n    const contactInbox3:ContactInbox = new ContactInbox();\r\n    contactInbox3.contactInfo = contactInfo3;\r\n\r\n    const contactInbox4:ContactInbox = new ContactInbox();\r\n    contactInbox4.contactInfo = contactInfo4;\r\n\r\n    const contactInbox5:ContactInbox = new ContactInbox();\r\n    contactInbox5.contactInfo = contactInfo5;\r\n\r\n    this.inbox.push(contactInbox1);\r\n    this.inbox.push(contactInbox2);\r\n    this.inbox.push(contactInbox3);\r\n    this.inbox.push(contactInbox4);\r\n    this.inbox.push(contactInbox5);\r\n  }\r\n  getContacts():Array<ContactInfo>{\r\n    const contacts:Array<ContactInfo> = new Array<ContactInfo>();\r\n    for(let item of this.inbox){\r\n      contacts.push(item.contactInfo);\r\n    }\r\n    console.log('contacts in server: ',contacts);\r\n    return contacts;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig:{\r\n    apiKey: \"AIzaSyAqNdZSmMQrk3Sw5SZe83e12ipLzgFLl1w\",\r\n    authDomain: \"chat-app-ac2fe.firebaseapp.com\",\r\n    projectId: \"chat-app-ac2fe\",\r\n    storageBucket: \"chat-app-ac2fe.appspot.com\",\r\n    messagingSenderId: \"380513388976\",\r\n    appId: \"1:380513388976:web:ee447c53e920915492ae75\",\r\n    measurementId: \"G-GLPKQJXCWG\"\r\n  },\r\n  api:{\r\n    url: 'http://localhost:3000/chat'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}